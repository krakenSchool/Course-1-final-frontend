{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport matter from \"gray-matter\";\nconst getPostMetadata = async () => {\n  const postsDirectory = \"/posts\"; // Assuming the 'posts' folder is in the 'public' directory\n  // List of file names, replace with actual file names or fetch from a directory listing API\n  const fileNames = [\"post1.md\", \"post2.md\" /* ... other file names ... */];\n  const postsPromises = fileNames.map(async fileName => {\n    const response = await fetch(`${postsDirectory}/${fileName}`);\n    const fileContents = await response.text();\n    const matterResult = matter(fileContents);\n    return {\n      title: matterResult.data.title,\n      date: matterResult.data.date,\n      subtitle: matterResult.data.subtitle,\n      slug: fileName.replace(\".md\", \"\")\n    };\n  });\n  return Promise.all(postsPromises);\n};\n\n// Custom hook to use the getPostMetadata function\nexport const usePostMetadata = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    getPostMetadata().then(fetchedPosts => {\n      setPosts(fetchedPosts);\n    });\n  }, []);\n  return posts;\n};\n_s(usePostMetadata, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");","map":{"version":3,"names":["useState","useEffect","matter","getPostMetadata","postsDirectory","fileNames","postsPromises","map","fileName","response","fetch","fileContents","text","matterResult","title","data","date","subtitle","slug","replace","Promise","all","usePostMetadata","_s","posts","setPosts","then","fetchedPosts"],"sources":["/Users/Dauntless/Desktop/Coding/HUSTLECODE/markdown-blog/simple-react/markdown-blog/src/utils/getPostMetadata.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport matter from \"gray-matter\";\n\nconst getPostMetadata = async () => {\n  const postsDirectory = \"/posts\"; // Assuming the 'posts' folder is in the 'public' directory\n  // List of file names, replace with actual file names or fetch from a directory listing API\n  const fileNames = [\"post1.md\", \"post2.md\" /* ... other file names ... */];\n\n  const postsPromises = fileNames.map(async (fileName) => {\n    const response = await fetch(`${postsDirectory}/${fileName}`);\n    const fileContents = await response.text();\n    const matterResult = matter(fileContents);\n    return {\n      title: matterResult.data.title,\n      date: matterResult.data.date,\n      subtitle: matterResult.data.subtitle,\n      slug: fileName.replace(\".md\", \"\"),\n    };\n  });\n\n  return Promise.all(postsPromises);\n};\n\n// Custom hook to use the getPostMetadata function\nexport const usePostMetadata = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getPostMetadata().then((fetchedPosts) => {\n      setPosts(fetchedPosts);\n    });\n  }, []);\n\n  return posts;\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,aAAa;AAEhC,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,cAAc,GAAG,QAAQ,CAAC,CAAC;EACjC;EACA,MAAMC,SAAS,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,+BAA+B;EAEzE,MAAMC,aAAa,GAAGD,SAAS,CAACE,GAAG,CAAC,MAAOC,QAAQ,IAAK;IACtD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,cAAe,IAAGI,QAAS,EAAC,CAAC;IAC7D,MAAMG,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1C,MAAMC,YAAY,GAAGX,MAAM,CAACS,YAAY,CAAC;IACzC,OAAO;MACLG,KAAK,EAAED,YAAY,CAACE,IAAI,CAACD,KAAK;MAC9BE,IAAI,EAAEH,YAAY,CAACE,IAAI,CAACC,IAAI;MAC5BC,QAAQ,EAAEJ,YAAY,CAACE,IAAI,CAACE,QAAQ;MACpCC,IAAI,EAAEV,QAAQ,CAACW,OAAO,CAAC,KAAK,EAAE,EAAE;IAClC,CAAC;EACH,CAAC,CAAC;EAEF,OAAOC,OAAO,CAACC,GAAG,CAACf,aAAa,CAAC;AACnC,CAAC;;AAED;AACA,OAAO,MAAMgB,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdE,eAAe,CAAC,CAAC,CAACuB,IAAI,CAAEC,YAAY,IAAK;MACvCF,QAAQ,CAACE,YAAY,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOH,KAAK;AACd,CAAC;AAACD,EAAA,CAVWD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}