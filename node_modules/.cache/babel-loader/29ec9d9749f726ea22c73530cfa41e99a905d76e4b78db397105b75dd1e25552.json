{"ast":null,"code":"var _jsxFileName = \"/Users/Dauntless/Desktop/Coding/HUSTLECODE/markdown-blog/simple-react/markdown-blog/src/components/Postpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, Box, Container } from \"@mui/material\";\nimport ReactMarkdown from \"react-markdown\";\nimport { fetchPostContent } from \"../utils/fetchPostContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = props => {\n  _s();\n  const [postContent, setPostContent] = useState(\"\");\n  const slug = props.params.slug;\n  useEffect(() => {\n    fetchPostContent(slug).then(content => {\n      setPostContent(content);\n    });\n  }, [slug]);\n  console.log(\"postContent\", postContent);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        color: \"textPrimary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"textSecondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: postContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"BU3QW3T9o8ZqmIaw9Ay+PVk5tfc=\");\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Box","Container","ReactMarkdown","fetchPostContent","jsxDEV","_jsxDEV","PostPage","props","_s","postContent","setPostContent","slug","params","then","content","console","log","children","my","textAlign","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Dauntless/Desktop/Coding/HUSTLECODE/markdown-blog/simple-react/markdown-blog/src/components/Postpage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography, Box, Container } from \"@mui/material\";\nimport ReactMarkdown from \"react-markdown\";\nimport { fetchPostContent } from \"../utils/fetchPostContent\";\n\nconst PostPage = (props) => {\n  const [postContent, setPostContent] = useState(\"\");\n  const slug = props.params.slug;\n\n  useEffect(() => {\n    fetchPostContent(slug).then((content) => {\n      setPostContent(content);\n    });\n  }, [slug]);\n\n  console.log(\"postContent\", postContent);\n\n  return (\n    <Container>\n      <Box my={4} textAlign=\"center\">\n        <Typography variant=\"h2\" color=\"textPrimary\">\n          {/* Title will be here. Parsing the title from markdown might require additional logic */}\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          {/* Date will be here. Similarly, parsing the date will need additional logic */}\n        </Typography>\n      </Box>\n\n      <Box>\n        <ReactMarkdown children={postContent} />\n      </Box>\n    </Container>\n  );\n};\n\nexport default PostPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,GAAG,EAAEC,SAAS,QAAQ,eAAe;AAC1D,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,SAASC,gBAAgB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMc,IAAI,GAAGJ,KAAK,CAACK,MAAM,CAACD,IAAI;EAE9Bb,SAAS,CAAC,MAAM;IACdK,gBAAgB,CAACQ,IAAI,CAAC,CAACE,IAAI,CAAEC,OAAO,IAAK;MACvCJ,cAAc,CAACI,OAAO,CAAC;IACzB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEVI,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEP,WAAW,CAAC;EAEvC,oBACEJ,OAAA,CAACJ,SAAS;IAAAgB,QAAA,gBACRZ,OAAA,CAACL,GAAG;MAACkB,EAAE,EAAE,CAAE;MAACC,SAAS,EAAC,QAAQ;MAAAF,QAAA,gBAC5BZ,OAAA,CAACN,UAAU;QAACqB,OAAO,EAAC,IAAI;QAACC,KAAK,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhC,CAAC,eACbpB,OAAA,CAACN,UAAU;QAACqB,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAENpB,OAAA,CAACL,GAAG;MAAAiB,QAAA,eACFZ,OAAA,CAACH,aAAa;QAACe,QAAQ,EAAER;MAAY;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACjB,EAAA,CA5BIF,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}