{"ast":null,"code":"var _jsxFileName = \"/Users/Dauntless/Desktop/Coding/HUSTLECODE/markdown-blog/simple-react/markdown-blog/src/components/Postpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, Box, Container } from \"@mui/material\";\nimport ReactMarkdown from \"react-markdown\";\nimport { fetchPostContent } from \"../utils/fetchPostContent\";\nimport matter from \"gray-matter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const [postContent, setPostContent] = useState(\"\");\n  const slug = \"post1\";\n  useEffect(() => {\n    fetchPostContent(slug).then(content => {\n      const matterResult = matter(content);\n      const contentObject = {\n        title: matterResult.data.title,\n        date: matterResult.data.date,\n        subtitle: matterResult.data.subtitle\n      };\n      setPostContent(contentObject);\n    });\n  }, [slug]);\n  console.log(\"postContent\", postContent);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        color: \"textPrimary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"textSecondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: postContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"BU3QW3T9o8ZqmIaw9Ay+PVk5tfc=\");\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Box","Container","ReactMarkdown","fetchPostContent","matter","jsxDEV","_jsxDEV","PostPage","_s","postContent","setPostContent","slug","then","content","matterResult","contentObject","title","data","date","subtitle","console","log","children","my","textAlign","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Dauntless/Desktop/Coding/HUSTLECODE/markdown-blog/simple-react/markdown-blog/src/components/Postpage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography, Box, Container } from \"@mui/material\";\nimport ReactMarkdown from \"react-markdown\";\nimport { fetchPostContent } from \"../utils/fetchPostContent\";\nimport matter from \"gray-matter\";\n\nconst PostPage = () => {\n  const [postContent, setPostContent] = useState(\"\");\n  const slug = \"post1\";\n\n  useEffect(() => {\n    fetchPostContent(slug).then((content) => {\n      const matterResult = matter(content);\n      const contentObject = {\n        title: matterResult.data.title,\n        date: matterResult.data.date,\n        subtitle: matterResult.data.subtitle,\n      };\n\n      setPostContent(contentObject);\n    });\n  }, [slug]);\n\n  console.log(\"postContent\", postContent);\n\n  return (\n    <Container>\n      <Box my={4} textAlign=\"center\">\n        <Typography variant=\"h2\" color=\"textPrimary\">\n          {/* Title will be here. Parsing the title from markdown might require additional logic */}\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          {/* Date will be here. Similarly, parsing the date will need additional logic */}\n        </Typography>\n      </Box>\n\n      <Box>\n        <ReactMarkdown children={postContent} />\n      </Box>\n    </Container>\n  );\n};\n\nexport default PostPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,GAAG,EAAEC,SAAS,QAAQ,eAAe;AAC1D,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,OAAOC,MAAM,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMc,IAAI,GAAG,OAAO;EAEpBb,SAAS,CAAC,MAAM;IACdK,gBAAgB,CAACQ,IAAI,CAAC,CAACC,IAAI,CAAEC,OAAO,IAAK;MACvC,MAAMC,YAAY,GAAGV,MAAM,CAACS,OAAO,CAAC;MACpC,MAAME,aAAa,GAAG;QACpBC,KAAK,EAAEF,YAAY,CAACG,IAAI,CAACD,KAAK;QAC9BE,IAAI,EAAEJ,YAAY,CAACG,IAAI,CAACC,IAAI;QAC5BC,QAAQ,EAAEL,YAAY,CAACG,IAAI,CAACE;MAC9B,CAAC;MAEDT,cAAc,CAACK,aAAa,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEVS,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEZ,WAAW,CAAC;EAEvC,oBACEH,OAAA,CAACL,SAAS;IAAAqB,QAAA,gBACRhB,OAAA,CAACN,GAAG;MAACuB,EAAE,EAAE,CAAE;MAACC,SAAS,EAAC,QAAQ;MAAAF,QAAA,gBAC5BhB,OAAA,CAACP,UAAU;QAAC0B,OAAO,EAAC,IAAI;QAACC,KAAK,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhC,CAAC,eACbxB,OAAA,CAACP,UAAU;QAAC0B,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAENxB,OAAA,CAACN,GAAG;MAAAsB,QAAA,eACFhB,OAAA,CAACJ,aAAa;QAACoB,QAAQ,EAAEb;MAAY;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACtB,EAAA,CAnCID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}